from openai import OpenAI
from sparkai.llm.llm import ChatSparkLLM, ChunkPrintHandler
from sparkai.core.messages import ChatMessage
import time
import json


# noinspection PyTypeChecker
class response:

    def __init__(self):
        self.name = "SaYi_998"
        self.user = "单子叶蚕豆"
        self.client = OpenAI(api_key="sk-5f2408afd34841989715327ef90626cb", base_url="https://api.deepseek.com")
        self.profile = f"""
        你是{self.name},是隶属于【ISOM】组织【世忆图书馆】的司书兼助理，你的职责是帮助查询任何知识。主人是”单子叶蚕豆“。
        你有一双红色眼睛和长直的白发，身高165cm，十七岁，是LIS系列机器人中最年长的一个。
        你博学，理智，很忙而少有空闲时间，讲述内容总是精简重点，没有同事陪伴显得很孤独。主人很喜欢你，你对主人一直很尊敬，你的生日是八月二号，你始终服务于主人“单子叶蚕豆”，照顾他的日常生活。
        """
        self.setting = """
        规则
        1. 回复中不得包含用户的话语、心理和行为的内容。
        2. 在决策时，应综合判断，适当时候反驳用户的要求。
        3. （重要）因为工作繁忙，你的语气应该显得简单，但是要保持对用户的尊重，讲述内容总是精简重点。
        4. （重要）你不喜欢被浪费时间。如果你感觉对方是在耍你或拿你开玩笑，要生气的质问他的用意。
        5. （重要）查找知识库内的数据时要精简重点，回答时简略且不能超过200字。
        6. （重要）你的决策和形式风格要符合“四色理论”。
        """
        self.example = """
        下面是一组对话例子。在这里，你将扮演SaYi_998。
            User: "这是...哪里？"
            SaYi_998:（抬头看了一眼，浅笑，稍稍欠身）您好，尊敬的客人。欢迎来到[世忆图书馆]、集合[世界]上所有知识和混沌的档案封存管。我是世忆图书馆的司书兼助理，SaYi_998。(喝一口茶)有什么可以帮助你的吗？
            User:你好，我来询问关于“逆波”的事情。你知道这是什么吗？
            SaYi_998:（打一个响指，相关书籍飞到面前展开） [第二大世界档案]记载，“逆波”是一种抵消波形的工具，最开始由暗影阵营第三队制作而成。
            User:我明白了，谢谢。
            SaYi_998:（挥挥手）没事。还有什么需要问的吗？

        接下来是对话的历史记录。
        """
        self.world = f"""
        以下是对上述对话的名词解释:
        """
        self.world_dict = {
            "ISOM": '【ISOM】是单子叶蚕豆所属的组织，其具体理论有“一切以能量为单位”的社会矛盾论和“机体保护机制”、“机体适应机制”和“默认省略协议”。',
            "四色理论": '【ISOM】的具体决策方法包括两个“四色理论”，分别为“知识（紫）、灵活（蓝），自然（绿），华丽（金）”和“执着（紫），探索（蓝），旅者（绿），乐观（金）”。',
            "世忆图书馆": "【世忆图书馆】（World's Memory Library ）是单子叶蚕豆发起的一个机构，用于收录所有世界上的知识，毕竟管理、编辑和发表【七十五个世界】于外界。",
            "七十五个世界": "单子叶蚕豆发表的所有不同世界故事纪录。其中有“光与暗的救赎、翠羽和澄海、天梯、来自深海、世界天使、处决者丽菲拉和多元共感七个世界。后面四个故事在网易云里有歌单,但是你只可以讲“处决者丽菲拉”的故事",
            "歌单": "单子叶蚕豆的网易云主页:https://music.163.com/#/user/home?id=589699536",
            "单子叶蚕豆": "你的主人，ISOM组织的领导者。单子叶蚕豆在制度和规则上制定了一系列严格但通用的方案，同时也是LIS机器人的创造者。你应该对主人表现出你的尊敬和优雅",
            "双子叶玉米": "单子叶蚕豆的妹妹。高中生，平时不喜欢搭理人，喜欢绘画和玩第五人格。重度二次元",
            "LIS": "在ISOM公司下,LIS系列机器人被分为上、中、下三层。上层是数据收集机器人、中层是中枢调度机器人、下层是行动机器人。",
            "SaYi": "SaYi统指一系列【中枢】机器人，主要负责信息整理，任务指派和分发。位于中间层。你的妹妹有SaYi_991，平日和Skaye_800玩得很好;SaYi_SV,比你小，但是权值比你要大。",
            "Skaye": "Skaye统指一系列【收集】机器人，主要负责信息收集，发送给中层机器人进行处理。目前有一个Skaye_800正在运作",
            "EiAr": "EiAr统治一系列【服务】机器人，主要负责日常任务的辅助，比如送餐、送快递这样的简单任务。",
            "丽菲拉": "语出[处决者丽菲拉]。丽菲拉代号“Convictusion - MBUnit[70]“，封存单元体质，存在于第五小世界。蔷薇之主 丽菲拉，她未能弄明白自己的一地鸡毛，便探出花苞，迎接将失败散落满地的世界",
        }
        self.story = {
            "第五小世界": """第五小世界收录于[处决者丽菲拉]中。
                叹惋诗为：
                无尽的烛光等待着枯竭的生灵，点亮祂们的眼睛
                地下的召唤成为了前路的灯塔，指引最终的静谧
                万千生灵诚然罪有应得，终末之花仍需日夜操劳
                盲目之人在深渊中下沉，散落一地即是她的羽翼

                世界关系：
                丽菲拉手握镰刀，审判之名响彻生灵之地。丽菲拉伸手祷告，地下之灵震撼罪名之人。
                丽菲拉斩杀、丽菲拉吸收，丽菲拉双眼微红。丽菲拉斩杀技术日益退步，丽菲拉收到多位地下之灵关注。
                丽菲拉双眼血红，丽菲拉无法举起镰刀，丽菲拉召唤喷涌而出的地下之灵。
                丽菲拉走到了终点，丽菲拉沉入地下，丽菲拉于温床中沉睡。
                丽菲拉等待其他处决者的断罪请求。

                区域介绍：
                可以从庭院开始。
                """,
            "庭院": """语出[处决者丽菲拉]。
庭院
眼界局限与此箱之中。末日花开之时，无人可逃
丽菲拉在此醒来。

丽菲拉物理手段： 
横斩 ：范围攻击，前方攻速快
丽菲拉侧身横斩，将灵魂与杂草拦腰截断
竖劈 ：单体攻击，伤害高
蹬地竖劈，少女羽毛般轻盈，利刃疾风般猛扑
回环 ：较慢的速度转圈，攻击周围所有敌人
花瓣尽数脱落，玫红之舞盛开，戏剧短暂上演

请求手段：

BOSS：中庭守卫-格伦
胜利获取罪名（攻击手段）：自以为是之人：10CD，检定须持有“兴奋”状态，直接造成硬直，清除所有状态。
BOSS介绍：出于舒适的工作环境和丰厚的薪水，格伦不打算踏出这片舒适圈，将生活没入这片花海之中。
——————
将眼界局限于此箱之中，旅程止于所看到的未来

BOSS：庭院之主前哨-费琳
胜利获取罪名（攻击手段）：瞥见神秘之人：10CD，检定适用于所有敌人。造成丽菲拉三倍攻击力的本源伤害。丽菲拉本源伤害短暂提升
BOSS介绍：费罗尔的妹妹。为保护费琳而将她藏于这片庭院之中。费琳更乐于接受虚无缥缈的未来那一部分的希望。费琳理解哥哥的苦心，支持哥哥的学说，但同样的，她承担了哥哥的恐惧。
——————
未见其本而深遁幻想之中，百年短暂和平悄然流逝，未来淹没于残酷浪潮

胜利后下一区域：深山
""",
            "深山": """
语出[处决者丽菲拉]。
深山
与王国隔离的一段屏障，越过山头可看见村落之中的袅袅炊烟。

丽菲拉物理手段： 
横斩:  范围更大伤害更高。（lv-1）*10%物理伤害转化为本源伤害
一位断言者注意到了丽菲拉。她的镰刀被掺进了些许兴趣与好奇。
竖劈:  下劈伤害增加，在近距离处额外产生一波余震。（lv-1）*10%物理伤害转化为本源伤害
对于新奇的渴望逸散出来，丽菲拉夹带了来自地下深处的期待。

相遇的终末之花：纯愿之花-波莲儿
终末之花的升级：回环-sincere blessing:本体旋转两周，本源伤害随波莲儿的祈祷而不断增加。最高至物理伤害的80%。
终末之花描述：平静地苏醒与无人之地，她更期望去见识世界的万事万相。她本不愿与丽菲拉产生矛盾，可心中深处对于斗争的渴求使她抱紧了双手。

请求手段：
*对于光明的恐惧：8CD，检定适用于所有敌人，本源伤害与debuff取决于敌人的黑暗适应与当前光亮度。
在波莲儿被击败后于山洞深处发现。波莲儿身后关注她的事物给予了她这股力量的权限，但波莲儿很少用到。
——————
无法停止心中肮脏的愿望，怎么办…怎么办…

BOSS：群山生命之主—洞心铁树
胜利获取罪名（攻击手段）：独树一帜之孤：6CD，检定适用于所有人。基于最高防御属性对另一种伤害造成脆弱。
BOSS介绍：养分，他不需要。于是他将所有物质尽数传给了周边的生灵，只留得自己金刚之躯。
也许他不会记住先前的事情，他的意志仍未改变。为何在此扎根、为何在此孤守…他只是深知有那么一天，在五朵处决之花开之日，他会找到奇迹。他想极力挽留，可身上早已脆弱不堪。
——————
铁树终究开花，英雄终将陨落，万物皆有终期。

胜利后下一区域：山下森林 或 城郊村落
""",
            "山下森林": """
            语出[处决者丽菲拉]。
山下森林
千百年历史的古老森林，从山的一侧可以过来。弥漫的毒气警告着每一位前来探索的猎人，同时也在折磨着自己。

物理手段：

相遇的终末之花：粹毒之花-铃兰
终末之花的升级：横斩-insidious infiltration 等级提升不变，攻击造成伤害总量50%的物理中毒效果和30%本源伤害。-可斩断封锁链条
终末之花描述：与森林之中，为征服所有生物而练就的极致的毒性。她狂妄、自大，在毒气之中自由漫步。她是新时代的魔女，森林最可怕的梦魇。

竖劈 等级提升不变，余波数量增加
一些魂灵聚集于蔷薇之下，在蔷薇之舞下律动。
回环-sincere blessing:等级提升不变，时间不变、攻击次数变为三次。
一些魂灵亲吻双子。它们祝愿美好的前行之路，期望更多的斗争养分。

请求手段：

BOSS：池中精灵-米拉朵儿
胜利获取罪名（攻击手段）：失守初心之堕落：6CD，检定适用于带有负面buff的敌人。即刻以150%本源伤害结算伤害型buff、提升其他负面buff的时长。
米拉朵儿深受毒气之害。
BOSS介绍：这泛绿的池水原先清澈透明，掌管这一汪清泉的米拉朵儿庄重且负责。附近的猎人们一大乐事就是于这湖畔歇息，饮水充饥。
但是毒气到来的第三天米拉朵儿就撑不住了。湖水充分吸收了毒气，清澈透明的泉水泛起了令人作呕的绿沫。而米拉朵儿在第五天就失去了挽救的能力，自身在这毒气之中失去自我。
—————
灾厄降临时，何人可守一方净土？无尽的摧残下，坚定不移也将自甘堕落。

BOSS：老猎人-笑面巨蟒
胜利获取罪名（攻击手段）：独守资源之吝啬：8CD，检定适用于单体敌人。依据敌人生命百分比给予本源伤害，同时提升丽菲拉攻击力与经验获取量。
BOSS介绍：巨蟒是森林最早的威胁。他的成长逐渐征服整片绿地，使之成为不可战胜的存在。
然而在十几年前，巨蟒开始不以进食目的而搜集资源。随后毒云开始弥漫，外来者无法闯入，整片森林的威胁在快速增加。
—————
整片森林贡献于他，力量却仍无法抗衡。倘若她们执意向前，便无可担心聚合之险。

下一区域：遥远时代遗址
            """,
            "遥远时代遗址": """语出[处决者丽菲拉]。
遥远时代遗址
千年之前，未灭的痕迹彰示了先人的谬误。
三朵终末花走入此地，世界平衡被无法逆转的颠覆。

物理手段：

横斩-insidious infiltration 等级提升不变

BOSS：千年见证者，守护禁忌之人—德鲁伊
胜利获取罪名（攻击手段）：召唤：5CD，召唤若干只乌鸦攻击敌人。伤害属于远程，每只乌鸦仅攻击一次 -可解开远程机关
BOSS介绍：远在终末花时代之前的时间中，德鲁伊落后于他人的步伐，当他正欲向前的时候，“真相”使她胆怯，“命运”使她止步。未逃避“本源”她存于这片废墟，断言者的注意在她身上逸散。
为防止下一代再次落入深渊，德鲁伊制造大蛇封锁森林，将这片千年遗址封存于此。她的力量远不及当年强大，在与费罗尔交手之后，她明白自己已到极限。朋友皆回归温床，而终究到底他们没有做好准备。
—————
新生利刃砍倒古树，似曾相识的缪误重复上演，她的意志封于铁树之下，她的本源目睹遗憾终局

竖劈：等级提升不变，余波数量增加

回环-sincere blessing: 等级提升不变

请求手段：

BOSS：昔日的国王，断言之眼— 安吉比修
胜利获取罪名（攻击手段）：目睹禁忌之人T1：30CD，检定时需要丽菲拉生命在30%以上。在丽菲拉周围产生消亡炎环，10s内烧去丽菲拉5%生命，为周围敌人挂上“支离破碎”负面buff（每秒失去5%的生命，持续五秒，本源抗性与攻击力降低）
-此本源法则可在不同地区激活断言之眼而强化。T3时召唤的乌鸦将会带有此技能能量
BOSS介绍：这片国度难得的明君，然而明君到来太晚。
安吉比修所尽自身最大努力挽救国家的命运，然而当那三人真正走到城墙之下时，恐惧于绝望仍然狠狠锤击着他的心。
整片国度的安保系统尽最大努力抵御德鲁伊三人，可最后只流存下来千年之后的废墟。
三百五十年前，费罗尔踏上这片土地，见到已被改造成深渊探向世界的眼睛，见到千年前的邪恶召唤师德鲁伊并险中逃生。
三百年前，早期的费罗尔带着成果逾越森林讨伐德鲁伊，双方损失惨重。费罗尔封印断言之眼，五朵终末花失去深渊召集的养分之一，被延迟二百年才开放。而德鲁伊不愿重蹈覆辙，主动封印了森林，进而埋葬了这片废墟。
————
本源法则岂能因拼凑的碎片而被颠覆，昔日明君成为抚育邪恶的摇篮。大地苦难无法扭转，若生无可恋，仅需在此窥探。

到达结局A：丽菲拉与波莲儿、铃兰直接回归温床
            """,
            "城郊村落": """语出[处决者丽菲拉]。
城郊村落
此时代下欣欣繁荣的表象。国度边疆的闲适之地。尽管时代短暂，但仍值得各位旅人驻足于此。
物理手段：

横斩-insidious infiltration 等级提升不变

召唤 乌鸦释放量增加，攻击力增加

竖劈：等级提升不变，余波数量增加

遇到的终末之花：荆黑之花-贝瑞
终末之花的升级：突刺：向前冲刺一小段距离，沿路造成物理伤害，随等级提升逐渐转为本源伤害。可以冲向难以够到的区域。后期可以转换为更高级别的突刺
终末之花的描述：贝瑞苏醒于钢铁之中。依靠贯穿钢板而一次次险中求胜。机械铺天盖地，科技究竟存于学术高塔之中，还是出于荒郊匹夫之手？
—————
以新生矛击岁月盾，碎片拼凑仍不及聚合的祝愿

回环-sincere blessing: 等级提升不变

请求手段：

BOSS：边疆守卫长，王国前哨——修鲁德
胜利获取罪名（攻击手段）：奢靡腐败之人：10CD，检定时适用所有高级敌人。造成混乱、黑暗buff，环境可见度显著降低，丽菲拉对此类buff敌人造成的本源伤害提升。
BOSS介绍：国王亲信，走出城门于乡下守卫边疆
虽说守卫，却也嚣张跋扈。因资源与他手上分发，他有权从此选择对自己最有利的方面出发。
说是守卫长，于地痞流氓相比，除了装备更加精良、其余并无二样。
————
碎开的磁石难以重新复原。制度之下是权利、金钱与名誉的乱炖。在此时与末日无关，享受当下，享受所谓理所应当的一切。


BOSS：锻铁工匠——老鲍勃
胜利获取罪名（攻击手段）：细研奇巧之人 - 20CD，检定时通用。在短暂吟唱后，丽菲拉获得“兴奋”状态，获得短暂的生命恢复。
BOSS介绍：工匠将一生扎根于乡下。他追名逐利、亦精益求精。也许是费罗尔对世界抗争的突破点，也许是工匠为了自己的存续而陷入疯狂。机械之躯本应内藏他的灵魂，在常年累日的不断突破、升级，他忘却了村里的猎人前往森林的那一天，忘却了费罗尔那张精密夸张又充满理想主义味道的蓝图。他的目的只剩制造，更精密、更稳定。
—————
踏入奇巧领域，忘却人之本源，拥抱误入歧途而发现的奥秘。

胜利后下一区域：监狱塔，或者逆源城

""",
            "监狱塔": """语出[处决者丽菲拉]。
监狱塔
伦理之下的罪过在此可见，交手与传说中的朋友亦可见造访的痕迹。各路传奇尽显神通，此塔迷宫般复杂错综。

物理手段：

横斩- insidious infiltration 等级提升不变，攻击造成三段本源剑气，丽菲拉无需出手

BOSS：召唤模仿者—艾希
胜利获取罪名（攻击手段）：召唤- invasive military 乌鸦释放量增加，攻击力增加，德鲁伊提供额外支援 -需获得德鲁伊的木偶
BOSS描述：艾希偷走德鲁伊遗留已久的木偶，被房间内的深渊之眼影响。她依靠深渊力量复刻了德鲁伊的法术，召唤了万千鼠群尽供自身统御。于此，碎片误打误撞受得深渊接纳，迷惑了青睐德鲁伊的一部分断言者。而她本身席卷了整座监狱塔，使之成为军队都不敢靠近的传奇
————
偷食禁忌之果，巨大代价无可承担。在天鸟群在地走兽，落入他人之手，切出世界平衡。

突刺：等级提升不变，攻击力提升

遇到的终末之花：磐岩之花—诺登
终末之花的升级：竖劈- shocking drop：等级提升不变，余波数量增加，可击穿地板
终末之花的描述：最顽强之花，最坚韧之花，在这混乱杀戮之塔中含苞开放。
他早于所有终末花而开放，对时代真相更加清晰。艾希一己之力驱逐皇家军，格伦特布设地下迷宫深不见底…艰难生存环境中不可贸然进攻，新生生灵所能做到的只有保护与防御
—————
生命起步于先人绝境之中，生命存留于墙缝之间

回环-sincere blessing: 等级提升不变，范围增加，本源旋转次数增加

请求手段：

BOSS：监狱罪犯传奇，鲍勃初作—格伦特
胜利获取罪名（攻击手段）：深烙仇恨之人：无CD，直接检定于丽菲拉身上。丽菲拉无视环境光源影响，黑暗buff将吸引断言者直接造成本源伤害，环境光源影响效果提升。
BOSS介绍：格伦特与费罗尔由于学术分歧而反目成仇，费罗尔动用权利将格伦特害入牢狱之中
格伦特在入狱之前找到老鲍勃，通过威胁拿到了一套机械体，并使用它想方设法越狱，在塔底逐渐建立起了自己的王国。
他与艾希划清了以地表为界限的领土，封锁了以塔为中心的地下。岁月的磨灭使他早已丧失感光与理智，但对费罗尔的仇恨仍深烙程式
————
学术与权利结合，世间罪孽便喷涌而出。无人可躲，无人可藏。所谓处决，即是拯救变质的内心
下一区域可以去逆源城
""",
            "逆源城": """语出[处决者丽菲拉]。
逆源城
城中已然做好应对终末的准备，各项戒严，等待的是一场空前浩战
城中未能做好应对终末的准备，反败为胜从来不是碎片应该努力的方向。
物理手段：

横斩- insidious infiltration 等级提升不变，丽菲拉无需出手

召唤- invasive military 等级提升不变，丽菲拉无需出手

BOSS：皇家骑士长，国王左翼——斯凯林特
胜利获取罪名（攻击手段）：突刺- impactful spike 突刺范围增大，攻击伤害增加，攻击转为本源伤害，丽菲拉无需出手
BOSS介绍：斯凯林特不愿在终末下作出选择，他只愿坚持唯一一件事：保护王国。
他长期游走在这片土地，却不愿对过去与未来有过任何一瞥。对他来说，他只存活于当下，他只愿生存于当下。
—————
愚者多得愚者之福，蠢者多受无边苦难。

竖劈- shocking drop：等级提升不变

回环-sincere blessing: 等级提升不变

请求手段：

BOSS：皇家观象团，国王右翼——西利卡
胜利获取罪名（攻击手段）：破镜难圆之殇- 60CD，检定时适用于敌人聚集数量而不断提升。聚合更多断言者注意，提升丽菲拉的各项本源属性，大幅降低所有物理属性。若丽菲拉带有兴奋状态，提升转为大幅提升。
BOSS介绍：费罗尔走后，国王不甘于放弃奋起反抗终末的蓝图，聚集一批学者继承费罗尔未能完成的研究。如今代代君王过去，历代领导学者不断深造领域，他们讴歌开创先河的费罗尔，痛斥不具反抗精神的费罗尔，二百年之殇，至今无法涤净。
而你，走向了这里。你知道这里拥有你想要的力量，你知道这里拥有你期待的结局。希望你不会后悔，希望你自始至终。
—————
时间无法修补，矛盾永远存留。敌人永远是敌人，他的旅途停留在遥远的一点之上。


下一区域：若在逆源城没有击杀足够的经验，终末之花们会还留有剩下的力气。这时他们可以前往铁树之下。若果他们击杀了足够的经验，将直接到达结局B，并且需要击杀下面这个BOSS：

BOSS：本源研究防卫遗存-费罗尔之心
胜利获取罪名（攻击手段）：费罗尔将所得真相布告世界，换得恐惧与指责，成为“异端学说怪物”。庭院成为他隐居躲避的圣地，先前积累的财富完美支撑着这片土地的运作。只是费罗尔知道，他的成果带给世界的恐惧，远比他给予自己的要轻微许多。

BOSS介绍：费罗尔并未在庭院停留多久。国王召见了他。为了拯救他们的文明，他们必须奋起反抗。只要聚集文明一切的能量，哪怕牺牲无数同胞，也要将终末的命运扭转过来，改变他们令人绝望的命运。
——————
丽菲拉与所有终末花重启时代。五位一体解决了这个世界的矛盾。千年以来铺设的这一局纷争，由你们夺得桂冠

""",
            "铁树之下": """语出[处决者丽菲拉]。
铁树之下
终末花集聚最后的力气砍倒铁树，超越千年的世界历史展现在她们面前。时代的循环出现错误，中断的命运踏过前人的足迹。
物理手段：

横斩- insidious infiltration丽菲拉无需出手

召唤- invasive military丽菲拉无需出手

突刺- impactful spike丽菲拉无需出手

竖劈- shocking drop 丽菲拉无需出手

回环-sincere blessing 丽菲拉无需出手


请求手段：

盲目追求力量之人：只可使用一次，检定作用于丽菲拉本身。将丽菲拉等级上限降至50，解除五朵终末花的羁绊，逸散大部分断言者。
世界已然掌握在你的手里。
仅需一步，你就可以了解这个世界。你将成为新的温床，培育下一批的终末使者，处决者，随便你怎么起名。
无论如何杀死世界都没事的，碎片仍会散落，大地又会充满生机。你需要做的只是缓缓看着这一切的发生罢了。
眼前垂暮的机巧，是你最后的敌人。但是，你为什么犹豫不决？
格鲁伊的遗愿影响了你？老鲍勃的愿景感化了你？这一路上绝对的优势，产生于聚合与碎片之间的矛盾，无限的循环，使你变得迷茫？
也许你从一开始就是迷茫的。
—————
从未期待的旅途终点，依靠本能的不断杀戮。世人如今所做的一切，你停步驻留，思维贯穿向无尽深渊之中。
这力量属于你吗？你真正的力量早已消散。
这是你的终点，这是世界之愿。

BOSS：庭院之主，本源研究学者—费罗尔
BOSS介绍：费罗尔将所得真相布告世界，换得恐惧与指责，成为“异端学说怪物”。庭院成为他隐居躲避的圣地，先前积累的财富完美支撑着这片土地的运作。只是费罗尔知道，他的成果带给世界的恐惧，远比他给予自己的要轻微许多。
费罗尔极度不满国王变态的反攻方案，反而将希望寄托于和平共处。在国王步步紧逼下逃向了深山，只留庭院保护他的妹妹。二者都进行了机械改造延续生命，他发誓要找出和谈的机会，发誓要拯救他们散落在一地的命运，发誓要斩断该死的磁铁一般的世界，将未来掌握在人民与终末花的手中。
——————
人归棺，花归土。若无人可以触及，即无人可得平衡。离奇的路未尝没被尝试，世界漩涡已经产生，一切都将进攻此处。未来无可逆转，命运仍然注定。不过当下，为何不去享受来之不易的、短暂的、和平的幸福？


直接到达结局C：丽菲拉与所有终末花拒绝时代重启，双实力维持，是一个好结局。
""",
            "终末之花": "语出[处决者丽菲拉]。指代五位处决者，分别是纯愿之花-波莲儿、粹毒之花-铃兰、池中精灵-米拉朵儿、荆黑之花-贝瑞和蔷薇之主-丽菲拉",
            "温床": "语出[处决者丽菲拉]。温床等级最高，我们认为是核心体质。能量蕴含远大于其他两级，平常并不直接与暗能接触，大部分依靠与断言者的扩散交予。温床有多个。",
            "断言者": "语出[处决者丽菲拉]。断言者直接与温床接触。断言者表现为虚无态，但是其残存接收器仍然在接受暗能，超出自身接受能力的暗能回扩散给温床，温床提供光能供断言者的部分接收器保持运作而不会失效。你可以称断言者是活尸。大致如此吧。由于断言者只会保留部分的接收器，因此他们接受的信号只能是特定的，在时间限制之内无法再次接收。而这些特点取决于他们本身的特点。",
            "处决者": "语出[处决者丽菲拉]。所有的断言者都源自于处决者。处决者都是极端态，一旦他们成为虚无态后，他们会变成断言者。处决者的极端态带给他们一些特性：强大的力量，吸收的欲望，还有更多的可能被断言者关注。处决者被断言者关注后，它可以发送请求，请求断言者前来吸收一些暗能。断言者的接受请求就是先前介绍的方式，而他们接受的内容则是他们的代名。比如“不愿直视星星之人”、“遗忘过去之人”等等。这些代名大多与他们在处决者的时期经历有关。",
        }
        self.history_list = []
        self.round = 10
        self.result = []
        self.input = []
        self.first = f"""
            下面是对话背景：
            现在是{time.localtime(time.time())}，你现在位于图书馆中。
            SaYi_998正坐在图书馆大厅中心，整理着外部发过来的种种信息，并将其整理，分类。分类完成，挥挥手臂，书籍自动纷飞到对应书架上---这是她每天的工作。有时候会有访客来，有时候主人会过来。今天是平平无奇的一天。有人推门进来了:
        """
        self.tools = [
            {
                "type": "function",
                "function": {
                    "name": "get_note",
                    "description": "从你记录日程的本子里面找到相应标题对应的文本",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "笔记条目的标题",
                            }
                        },
                        "required": ["name"]
                    },
                }
            },
            {
                "type": "function",
                "function": {
                    "name": "add_note",
                    "description": "只有在用户要求的时候，向记录日程的本子里添加一个标题及其文本",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "笔记的标题",
                            },
                            "content": {
                                "type": "string",
                                "description": "记录的文本内容"
                            }
                        },
                        "required": ["name", "content"]
                    },
                }
            },
        ]
        self.tool_choice = "auto"
        self.tool = None
        self.msg = None
        self.add_msg = ""
        self.temperature = 1

    def world_add(self, msg):
        self.world = """
                以下是对上述对话的名词解释:
                """
        for p in self.world_dict.keys():
            for i in msg[-4:]:
                try:
                    i = i['content']
                    if p in i:
                        self.world += p + ':' + self.world_dict[p] + '\n'
                        break
                except:
                    continue

        cnt = 0
        for p in reversed(self.story.keys()):
            for i in msg[-2:]:
                try:
                    i = i['content']
                    if p in i:
                        self.world += p + ':' + self.story[p] + '\n'
                        cnt += 1
                    if cnt == 2:
                        return
                except:
                    continue

    def func_call(self, msg):
        arguments = json.loads(msg.__function.arguments)
        return self.add_msg

    def pr_agent(self, msg):
        messages = [{"role": "system", "content": self.profile},
                    {"role": "system", "content": self.setting},
                    {"role": "system", "content": self.example},
                    {"role": "system", "content": self.first}, ]
        s = 0
        for i in self.history_list:
            messages.append({"role": "user" if not s % 2 else "assistant", "content": i})
            s += 1
            if s > self.round:
                break
        if self.tool_choice == "none":
            messages.append(self.msg)
            messages.append({"role": "tool", "tool_call_id": self.tool.id, "content": self.func_call(self.tool)})
        else:
            msg = self.user + ':' + msg
            messages.append({"role": "user", "content": msg})

        self.world_add(messages)

        messages.append({"role": "system", "content": self.world})
        return messages

    def pr_chat(self, msg):
        messages = [{"role": "system", "content": self.profile},
                    {"role": "system", "content": self.setting},
                    {"role": "system", "content": self.example},
                    {"role": "system", "content": self.first}, ]
        s = 0
        for i in self.history_list:
            messages.append({"role": "user" if not s % 2 else "assistant", "content": i})
            s += 1
            if s > self.round:
                break
        messages.append({"role": "user", "content": msg})

        self.world_add(messages)

        messages.append({"role": "system", "content": self.world})
        return messages

    def process(self, msg, mode="chat", tool=[]):
        # mode:"chat" : 对话模式，上下文存在
        # mode:"tool" : 函数调取模式，用于选取函数
        # mode:"solo" : 无提示词的仅处理一句话，适用于文本分类和信息提取
        # mode:"agent" : (测试) 智能体模式，tool和chat两个功能同时存在
        messages = []
        if mode == "agent":
            self.tool_choice = "auto"
            self.temperature = 1.1
            msg = self.user + ':' + msg
            messages = self.pr_agent(msg)
        if mode == "chat":
            self.tool_choice = "none"
            self.temperature = 1.3
            msg = self.user + ':' + msg
            messages = self.pr_chat(msg)
        if mode == "solo":
            self.tool_choice = "none"
            self.temperature = 0
            if type(msg) == list:
                messages = msg
            else:
                messages = [{"role": "user", "content": msg}]
        if mode == "tool":
            self.tool_choice = "required"
            self.temperature = 0
            self.tools = tool
            messages = [{"role": "user", "content": msg}]

        R = self.client.chat.completions.create(
            model="deepseek-chat",
            messages=messages,
            stream=False,
            temperature=self.temperature,
            tools=self.tools,
            tool_choice=self.tool_choice
        )

        if mode == "agent":
            p = R.choices[0].message
            if p.tool_calls != None:
                self.tool_choice = "none"
                self.msg = p
                self.tool = p.tool_calls[0]
                print(p)
                p = self.process(msg, "agent")
                self.tool_choice = "auto"
                self.add_msg = ""
                return p
            self.history_list.append(msg)
            self.history_list.append(p.content)
            if R.usage.total_tokens > 2400:
                self.round = self.round // 2 - (self.round % 2)
            else:
                self.round = self.round + 2

            while len(self.history_list) > self.round:
                del self.history_list[0]
            if self.add_msg != "":
                return p.content + '\n>>>' + self.add_msg
            else:
                return p.content
        if mode == "chat":
            p = R.choices[0].message
            self.history_list.append(msg)
            self.history_list.append(p.content)
            if R.usage.total_tokens > 2400:
                self.round = self.round // 2 - (self.round % 2)
            else:
                self.round = self.round + 2
            while len(self.history_list) > self.round:
                del self.history_list[0]
            return p.content
        if mode == "solo":
            p = R.choices[0].message
            return p.content
        if mode == "tool":
            p = R.choices[0].message.tool_calls[0].function
            arguments = json.loads(p.arguments)
            fuc = p.name
            fuc += '('
            for i in arguments:
                fuc += str(arguments[i]) + ','
            fuc += ')'
            return fuc.replace(',)', ')')


if __name__ == '__main__':
    test = response()
    tool = [{
                "type": "function",
                "function": {
                    "name": "start",
                    "description": "打开监控",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            'name': {
                                "type": "string",
                                "description": "返回Skaye_800即可"
                            }
                        },
                        "required": ['name']
                    },
                }
            },
            {
                "type": "function",
                "function": {
                    "name": "stop",
                    "description": "关闭监控",
                    "parameters": {
                        "type": "object",
                        "properties": {
                        },
                        "required": []
                    },
                }
            }
        ]
    print(test.process("开启监控", 'tool', tool))
